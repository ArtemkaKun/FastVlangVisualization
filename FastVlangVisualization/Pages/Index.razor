@page "/"
@using FastVlangVisualization.DataGrabSystem
@using FastVlangVisualization.DataGrabSystem.PerformanceTestDataSystem
@using FastVlangVisualization.DataProcessorSystem

<PageTitle>Index</PageTitle>

@if (VlangTestsDataProcessor == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <div >
        <RadzenChart>
            <RadzenLineSeries Smooth="false" Data="@TestData" CategoryProperty="Timestamp" Title="Name" ValueProperty="PerformanceResultNumericValue">
                <RadzenMarkers MarkerType="MarkerType.None"/>
            </RadzenLineSeries>
        </RadzenChart>
        <RadzenCategoryAxis Padding="20" FormatString="{0:MMM}"/>
    </div>
}

@code {
    private List<IPerformanceTestData> TestData => GetVToCCompileTime();

    private IDataProcessor VlangTestsDataProcessor { get; set; }

    protected override async Task OnInitializedAsync ()
    {
        List<IPerformanceTestData> testResultsData = await new FastVlangWebPageDataGrabber("https://fast.vlang.io/").GetVlangSpeedDataAsync();
        VlangTestsDataProcessor = new VlangDataProcessor(testResultsData);
    }

    private List<IPerformanceTestData> GetVToCCompileTime ()
    {
        return VlangTestsDataProcessor.GroupedTestResultsMap["v -o v.c"];
    }

}